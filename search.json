[{"title":"Hello World","url":"/2025/06/11/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n"},{"title":"vite+vue+electron+打包模版","url":"/2025/06/11/vite-vue-electron-%E6%89%93%E5%8C%85%E6%A8%A1%E7%89%88/","content":"1.创建项目并安装依赖(Node 20.19.0)npm create vite@latestcd projectyarnyarn add electron electron-builder nodemon npm-run-all\n\n2.创建文件新建文件夹electron\n新建文件main.js\nconst &#123; app, BrowserWindow &#125; = require(&#x27;electron&#x27;)const &#123; join &#125; = require(&#x27;path&#x27;)const createWindow = () =&gt; &#123;    const win = new BrowserWindow(&#123;        width: 800,        height: 600,        webPreferences: &#123;            webSecurity: false        &#125;    &#125;)     const env = app.isPackaged ? &#x27;production&#x27; : &#x27;development&#x27;    const indexHtml = &#123;        development: &#x27;http://localhost:5173&#x27;, // 开发环境        production: join(__dirname, &#x27;../dist/index.html&#x27;) // 生产环境    &#125;    win.loadURL(indexHtml[env])    // win.loadFile(&#x27;index.html&#x27;) &#125;app.whenReady().then(async () =&gt; &#123;    createWindow()    app.on(&#x27;activate&#x27;, () =&gt; &#123;        if (BrowserWindow.getAllWindows().length === 0) createWindow()    &#125;)&#125;)app.on(&#x27;window-all-closed&#x27;, () =&gt; &#123;    if (process.platform !== &#x27;darwin&#x27;) app.quit()&#125;)\n\nvite.config.js\nimport &#123; defineConfig &#125; from &#x27;vite&#x27;import vue from &#x27;@vitejs/plugin-vue&#x27;import &#123; resolve &#125; from &#x27;path&#x27;export default defineConfig(&#123;    plugins: [vue()],    base: &#x27;./&#x27;,    manifest: true,  //配置后才能让编译后的vue路径被正确识别    resolve: &#123;        alias: &#123;            &#x27;@&#x27;: resolve(__dirname, &#x27;./src&#x27;)        &#125;    &#125;,    optimizeDeps: &#123;        exclude: [&#x27;electron&#x27;], // 告诉 Vite 排除预构建 electron，不然会出现 __diranme is not defined    &#125;&#125;)\n\npackage.json\n&#123;  &quot;name&quot;: &quot;project&quot;,  &quot;private&quot;: true,  &quot;version&quot;: &quot;0.0.0&quot;,  &quot;type&quot;: &quot;commonjs&quot;,  &quot;main&quot;: &quot;electron/main.js&quot;,  &quot;scripts&quot;: &#123;    &quot;dev&quot;: &quot;vite&quot;,    &quot;build&quot;: &quot;vite build&quot;,    &quot;preview&quot;: &quot;vite preview&quot;,    &quot;electron&quot;: &quot;nodemon --exec electron . --watch ./ --ext .js&quot;,    &quot;electron:dev&quot;: &quot;npm-run-all --parallel dev electron&quot;,    &quot;electron:build&quot;: &quot;vite build &amp;&amp; electron-builder&quot;  &#125;,  &quot;dependencies&quot;: &#123;    &quot;nodemon&quot;: &quot;^3.1.10&quot;,    &quot;npm-run-all&quot;: &quot;^4.1.5&quot;,    &quot;sass-embedded&quot;: &quot;^1.89.1&quot;,    &quot;vue&quot;: &quot;^3.5.13&quot;  &#125;,  &quot;devDependencies&quot;: &#123;    &quot;@vitejs/plugin-vue&quot;: &quot;^5.2.3&quot;,    &quot;electron&quot;: &quot;^36.4.0&quot;,    &quot;electron-builder&quot;: &quot;^24.13.3&quot;,    &quot;vite&quot;: &quot;^6.3.5&quot;  &#125;,  &quot;build&quot;: &#123;    &quot;productName&quot;: &quot;electron-vue&quot;,    &quot;appId&quot;: &quot;electron-vue&quot;,    &quot;asar&quot;: true,    &quot;directories&quot;: &#123;      &quot;output&quot;: &quot;dist_electron/$&#123;version&#125;&quot;    &#125;,    &quot;files&quot;: [      &quot;dist&quot;,      &quot;electron&quot;    ],    &quot;nsis&quot;: &#123;      &quot;oneClick&quot;: false,      &quot;allowToChangeInstallationDirectory&quot;: true    &#125;,    &quot;mac&quot;: &#123;      &quot;category&quot;: &quot;your.app.category.type&quot;    &#125;,    &quot;win&quot;: &#123;      &quot;icon&quot;: &quot;./electron/log.ico&quot;,      &quot;target&quot;: [        &#123;          &quot;target&quot;: &quot;nsis&quot;,          &quot;arch&quot;: [            &quot;ia32&quot;          ]        &#125;      ]    &#125;,    &quot;linux&quot;: &#123;&#125;  &#125;&#125;\n\n3.运行开发\nyarn run electron:dev\n\n打包\nyarn run electron:build\n\n记录来自\nvite+vue3+electron项目搭建教程_electron vue3 vite配置-CSDN博客\n","tags":["NodeJS","Electron","Vite"]}]